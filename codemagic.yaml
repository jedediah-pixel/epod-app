workflows:
  ios_testflight:
    name: iOS TestFlight (Flutter)
    max_build_duration: 60

    environment:
      flutter: stable
      xcode: latest
      vars:
        BUNDLE_ID: com.yourco.hmepod
        XCODE_WORKSPACE: ios/Runner.xcworkspace
        XCODE_SCHEME: Runner
      groups:
        - app_store_credentials   # must include: APP_STORE_CONNECT_* , APPLE_TEAM_ID , (NO CERTIFICATE_PRIVATE_KEY here)

    scripts:
      - name: Flutter pub get
        script: flutter pub get

      - name: Flutter build iOS (no codesign)
        script: flutter build ios --release --no-codesign

      - name: CocoaPods install
        script: |
          cd ios
          pod install --repo-update
          cd ..

      - name: Import distribution P12 and fetch profiles
        script: |
          # Fail early if the secrets are missing
          if [ -z "${DISTRIBUTION_P12_BASE64:-}" ] || [ -z "${DISTRIBUTION_P12_PASSWORD:-}" ]; then
            echo "ERROR: DISTRIBUTION_P12_* vars are not set"; exit 2
          fi

          CERT_DIR="$HOME/Library/MobileDevice/Certificates"
          mkdir -p "$CERT_DIR"

          # Write the base64 .p12 to disk
          python3 - <<'PY'
      import os, base64, pathlib
      b64 = os.environ['DISTRIBUTION_P12_BASE64'].strip()
      p   = pathlib.Path(os.environ['HOME'])/ 'Library/MobileDevice/Certificates' / 'env_cert.p12'
      p.write_bytes(base64.b64decode(b64.encode()))
      print(p)
      PY

          keychain initialize
          # Import the P12 using its password
          keychain add-certificates \
            --certificate "$CERT_DIR/env_cert.p12" \
            --certificate-pass "$DISTRIBUTION_P12_PASSWORD"

          # Create/download provisioning profile(s) for App Store and install them
          app-store-connect fetch-signing-files \
            --bundle-id "$BUNDLE_ID" \
            --type IOS_APP_STORE \
            --create

          # Apply the profiles to the project
          xcode-project use-profiles \
            --project ios/Runner.xcodeproj \
            --scheme "$XCODE_SCHEME"


      - name: Show signing settings
        script: |
          xcode-project show-build-settings \
            --workspace "$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME" \
          | grep -E "PRODUCT_BUNDLE_IDENTIFIER|DEVELOPMENT_TEAM|PROVISIONING_PROFILE_SPECIFIER|CODE_SIGN_STYLE"

      - name: Publish to TestFlight
        script: |
          app-store-connect publish \
            --path "build/ios/ipa/*.ipa" \
            --submit-to-testflight true \
            --release-type MANUAL

    artifacts:
      - build/ios/ipa/*.ipa
