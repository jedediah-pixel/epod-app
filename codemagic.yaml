workflows:
  ios_testflight:
    name: iOS â†’ TestFlight (Flutter)
    max_build_duration: 60

    environment:
      flutter: stable
      xcode: latest
      vars:
        BUNDLE_ID: com.yourco.hmepod
        XCODE_WORKSPACE: ios/Runner.xcworkspace
        XCODE_SCHEME: Runner
      groups:
        - app_store_credentials   # APP_STORE_CONNECT_* , APPLE_TEAM_ID, CERTIFICATE_PRIVATE_KEY

    scripts:
      - name: Flutter pub get
        script: flutter pub get

      - name: CocoaPods install
        script: |
          cd ios
          pod install --repo-update
          cd ..

      - name: Import distribution cert + fetch profiles
        script: |
          # 1) Put your base64 CERTIFICATE_PRIVATE_KEY into a .p12 file
          python3 - <<'PY'
import os, base64, pathlib, sys
b64 = os.environ.get("CERTIFICATE_PRIVATE_KEY","").strip()
if not b64:
    print("ERROR: CERTIFICATE_PRIVATE_KEY env var is empty"); sys.exit(2)
cert_dir = pathlib.Path.home() / "Library/MobileDevice/Certificates"
cert_dir.mkdir(parents=True, exist_ok=True)
p12_path = cert_dir / "env_cert.p12"
p12_path.write_bytes(base64.b64decode(b64))
print(f"Wrote {p12_path}")
PY

          # 2) Initialize keychain & import that certificate
          keychain initialize
          keychain add-certificates --certificate "$HOME/Library/MobileDevice/Certificates/env_cert.p12"

          # 3) Fetch/create provisioning profiles for this bundle id
          app-store-connect fetch-signing-files "$BUNDLE_ID" \
            --type IOS_APP_STORE \
            --create

          # 4) Apply profiles to the Xcode project (your CLI expects --project)
          xcode-project use-profiles --project ios/Runner.xcodeproj

      - name: Show signing settings (sanity check)
        script: |
          xcode-project show-build-settings \
            --workspace "$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME" \
          | egrep "PRODUCT_BUNDLE_IDENTIFIER|DEVELOPMENT_TEAM|PROVISIONING_PROFILE_SPECIFIER|CODE_SIGN_STYLE"

      - name: Build IPA
        script: |
          xcode-project build-ipa \
            --workspace "$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME" \
            --export-method app-store

      - name: Publish to TestFlight
        script: |
          app-store-connect publish \
            --path "build/ios/ipa/*.ipa" \
            --submit-to-testflight true \
            --release-type MANUAL

    artifacts:
      - build/ios/ipa/*.ipa
